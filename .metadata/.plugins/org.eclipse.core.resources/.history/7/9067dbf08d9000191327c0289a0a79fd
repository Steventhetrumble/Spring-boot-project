package com.steve.roman;

import java.util.HashMap;
import java.util.Map;

public class RomanNumeralConverter implements NumberConverter{
	
	Map<String, Integer> characterValues = new HashMap<String, Integer>();
	
	public RomanNumeralConverter() {
		characterValues.put("I", 1);
		characterValues.put("V", 5);
		characterValues.put("X", 10);
		characterValues.put("L", 50);
		characterValues.put("C", 100);
	}
	
	@Override
	public int convert(String s) {
		int finalValue = 0;
		int temporaryValue1 = 0;
		int temporaryValue2 = 0;
		
		char[] chars = s.toCharArray();
		
		for(int i = 0; i < chars.length;i++) {
			if(i + 1 > chars.length) {
				finalValue += characterValues.get(chars[i]);
				return finalValue;
			}
			System.out.println(i);
			
			char temp1 = chars[i];
			temporaryValue1 =  characterValues.get(temp1);
			temporaryValue2 =  characterValues.get(chars[i + 1]);
			
			if(temporaryValue1 < temporaryValue2) {
				
				finalValue += (temporaryValue2 - temporaryValue1);
				i++;
			}
			else {
				finalValue += temporaryValue1;
				
			}
			
			
			
		}
		
		
			
		return 0;
	}

	

}
